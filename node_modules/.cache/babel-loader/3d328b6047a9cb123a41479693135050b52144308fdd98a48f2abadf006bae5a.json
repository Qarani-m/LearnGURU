{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/LearnGURU/src/auth/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LearnGuruApi from '../api/api.js';\nimport UserContext from \"../auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"../hooks/useLocalStorage.js\";\nimport \"./LoginForm.css\";\n\n/** Log IN form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /profile route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  login\n}) {\n  _s();\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  const [, setToken] = useLocalStorage(\"learnguru-token\");\n  console.debug(\"LoginForm\", \"login=\", typeof login, \"formData=\", formData, \"formErrors=\", formErrors);\n  async function navigateToUserPage(token) {\n    try {\n      const {\n        username\n      } = jwt.decode(token);\n      const url = `/users/${username}`;\n      navigate(url);\n    } catch (error) {\n      console.error(\"Error during navigation:\", error);\n    }\n  }\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    try {\n      let token = await LearnGuruApi.login(formData);\n\n      // Check if the token exists (successful login)\n      if (token) {\n        // set token in localStorage\n        setToken(token);\n        // set currentUser in App\n        setCurrentUser(formData.username);\n        // Clear form data\n        setFormData({\n          username: \"\",\n          password: \"\"\n        });\n\n        // Redirect to /courses\n        navigateToUserPage(token);\n      } else {\n        // If token does not exist, show an alert\n        setFormErrors([\"Invalid username or password\"]);\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setFormErrors([\"Error connecting to the server. Please try again later.\"]);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => ({\n      ...data,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Username:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"username\",\n                  className: \"form-control\",\n                  value: formData.username,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  value: formData.password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary float-right\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/instructorlogin\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Login As Instructor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"38h3GoulAIuMUad+1mYc7pAFaes=\", false, function () {\n  return [useNavigate, useLocalStorage];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","LearnGuruApi","UserContext","jwt","useLocalStorage","jsxDEV","_jsxDEV","LoginForm","login","_s","setCurrentUser","navigate","formData","setFormData","username","password","formErrors","setFormErrors","setToken","console","debug","navigateToUserPage","token","decode","url","error","handleSubmit","evt","preventDefault","handleChange","name","value","target","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onChange","type","href","_c","$RefreshReg$"],"sources":["/Users/scott/Desktop/LearnGURU/src/auth/LoginForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LearnGuruApi from '../api/api.js';\nimport UserContext from \"../auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"../hooks/useLocalStorage.js\";\nimport \"./LoginForm.css\"\n\n\n/** Log IN form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /profile route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\n\nfunction LoginForm({ login }) {\n    const { setCurrentUser } = useContext(UserContext);\n    const navigate = useNavigate();\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n    const [, setToken] = useLocalStorage(\"learnguru-token\");\n\n\n    console.debug(\n        \"LoginForm\",\n        \"login=\", typeof login,\n        \"formData=\", formData,\n        \"formErrors=\", formErrors,\n    );\n\n    async function navigateToUserPage(token) {\n        try {\n            const { username } = jwt.decode(token);\n            const url = `/users/${username}`;\n            navigate(url)\n        } catch (error) {\n            console.error(\"Error during navigation:\", error);\n        }\n    }\n\n    /** Handle form submit:\n     *\n     * Calls login func prop and, if successful, redirect to /companies.\n     */\n\n    async function handleSubmit(evt) {\n        evt.preventDefault();\n        try {\n            let token = await LearnGuruApi.login(formData);\n\n            // Check if the token exists (successful login)\n            if (token) {\n                // set token in localStorage\n                setToken(token);\n                // set currentUser in App\n                setCurrentUser(formData.username);\n                // Clear form data\n                setFormData({\n                    username: \"\",\n                    password: \"\",\n                });\n\n                // Redirect to /courses\n                navigateToUserPage(token);\n            } else {\n                // If token does not exist, show an alert\n                setFormErrors([\"Invalid username or password\"]);\n            }\n        } catch (error) {\n            console.error(\"Error during login:\", error);\n            setFormErrors([\"Error connecting to the server. Please try again later.\"]);\n        }\n    }\n\n\n    /** Update form data field */\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(data => ({ ...data, [name]: value }));\n    }\n\n    return (\n        <div>\n            <h1>Log In</h1>\n            <div className=\"LoginForm\">\n                <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label>Username:</label>\n                                    <input\n                                        name=\"username\"\n                                        className=\"form-control\"\n                                        value={formData.username}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Password:</label>\n                                    <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        className=\"form-control\"\n                                        value={formData.password}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary float-right\"\n                                >\n                                    Submit\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"/instructorlogin\"><small>Login As Instructor</small></a>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}