{"ast":null,"code":"var _jsxFileName = \"/Users/scott/Desktop/LearnGURU/src/auth/InstructorLoginForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LearnGuruApi from '../api/api.js';\nimport UserContext from \"./UserContext.js\";\nimport { useJwt } from \"react-jwt\";\nimport useLocalStorage from \"../hooks/useLocalStorage.js\";\nimport \"./LoginForm.css\";\n\n/** Log IN form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /profile route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstructorLoginForm({\n  login\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState([]);\n  const [, setToken] = useLocalStorage(\"learnguru-token\", \"\");\n  console.debug(\"LoginForm\", \"login=\", typeof login, \"formData=\", formData, \"formErrors=\", formErrors);\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  async function handleSubmit(evt) {\n    _s();\n    evt.preventDefault();\n    try {\n      let token = await LearnGuruApi.loginInstructor(formData);\n\n      // Check if the token exists (successful login)\n      if (token) {\n        let {\n          user_id\n        } = useJwt(token);\n        // set token in localStorage\n        setToken(token);\n        // set currentUser in App\n        setCurrentUser(formData.email);\n        // Clear form data\n        setFormData({\n          email: \"\",\n          password: \"\"\n        });\n        console.log(token);\n\n        // Redirect to /courses\n        navigate(`/instructors/${user_id}`);\n      } else {\n        // If token does not exist, show an alert\n        setFormErrors([\"Invalid username or password\"]);\n      }\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      setFormErrors([\"Error connecting to the server. Please try again later.\"]);\n    }\n  }\n\n  /** Update form data field */\n  _s(handleSubmit, \"sbkz8dumypWt+gyuT6g1AA1gNjo=\", false, function () {\n    return [useJwt];\n  });\n  function handleChange(evt) {\n    const {\n      name,\n      value\n    } = evt.target;\n    setFormData(data => ({\n      ...data,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Instructor Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"email\",\n                  className: \"form-control\",\n                  value: formData.email,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  className: \"form-control\",\n                  value: formData.password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary float-right\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Login As User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s2(InstructorLoginForm, \"38h3GoulAIuMUad+1mYc7pAFaes=\", false, function () {\n  return [useNavigate, useLocalStorage];\n});\n_c = InstructorLoginForm;\nexport default InstructorLoginForm;\nvar _c;\n$RefreshReg$(_c, \"InstructorLoginForm\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","LearnGuruApi","UserContext","useJwt","useLocalStorage","jsxDEV","_jsxDEV","InstructorLoginForm","login","_s2","_s","$RefreshSig$","setCurrentUser","navigate","formData","setFormData","username","password","formErrors","setFormErrors","setToken","console","debug","handleSubmit","evt","preventDefault","token","loginInstructor","user_id","email","log","error","handleChange","name","value","target","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onChange","type","href","_c","$RefreshReg$"],"sources":["/Users/scott/Desktop/LearnGURU/src/auth/InstructorLoginForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LearnGuruApi from '../api/api.js';\nimport UserContext from \"./UserContext.js\";\nimport { useJwt } from \"react-jwt\";\nimport useLocalStorage from \"../hooks/useLocalStorage.js\";\nimport \"./LoginForm.css\"\n\n\n/** Log IN form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /profile route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\n\nfunction InstructorLoginForm({ login }) {\n    const { setCurrentUser } = useContext(UserContext);\n    const navigate = useNavigate();\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    });\n    const [formErrors, setFormErrors] = useState([]);\n    const [, setToken] = useLocalStorage(\"learnguru-token\", \"\");\n\n\n\n    console.debug(\n        \"LoginForm\",\n        \"login=\", typeof login,\n        \"formData=\", formData,\n        \"formErrors=\", formErrors,\n    );\n\n    /** Handle form submit:\n     *\n     * Calls login func prop and, if successful, redirect to /companies.\n     */\n\n    async function handleSubmit(evt) {\n        evt.preventDefault();\n        try {\n            let token = await LearnGuruApi.loginInstructor(formData);\n\n\n            // Check if the token exists (successful login)\n            if (token) {\n                let { user_id } = useJwt(token);\n                // set token in localStorage\n                setToken(token);\n                // set currentUser in App\n                setCurrentUser(formData.email);\n                // Clear form data\n                setFormData({\n                    email: \"\",\n                    password: \"\",\n                });\n                console.log(token)\n\n                // Redirect to /courses\n                navigate(`/instructors/${user_id}`);\n            } else {\n                // If token does not exist, show an alert\n                setFormErrors([\"Invalid username or password\"]);\n            }\n        } catch (error) {\n            console.error(\"Error during login:\", error);\n            setFormErrors([\"Error connecting to the server. Please try again later.\"]);\n        }\n    }\n\n\n    /** Update form data field */\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(data => ({ ...data, [name]: value }));\n    }\n\n    return (\n        <div>\n            <h1>Instructor Log In</h1>\n            <div className=\"LoginForm\">\n                <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label>Email:</label>\n                                    <input\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        value={formData.email}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Password:</label>\n                                    <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        className=\"form-control\"\n                                        value={formData.password}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary float-right\"\n                                >Submit</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"/login\"><small>Login As User</small></a>\n            </div>\n        </div>\n    );\n}\n\nexport default InstructorLoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}